name: Deploy to staging

on:
  workflow_call:
    inputs:
      targets:
        required: true
        type: string
      name:
        type: string
        default: ''
      action:
        description: 'opened|reopened|synchronize|closed'
        type: string
        required: true
    secrets:
      token:
        required: true
      staging-token:
        required: true
      staging-mad-token:
        required: true
      private-key:
        required: true
      docker-username:
        required: true
      docker-password:
        required: true

jobs:
  prepare-url:
    name: Prepare URL
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.set-url.outputs.url }}
    strategy:
      matrix:
        target: ${{ fromJson(inputs.targets) }}
    steps:
      - name: Set URL
        id: set-url
        run: |
          if [ "${{ matrix.target }}" == "lemon" ]; then
            DOMAIN="fr"
          elif [ "${{ matrix.target }}" == "traack" ]; then
            DOMAIN="io"
          else
            DOMAIN="com"
          fi
          echo "url=https://staging-${{ inputs.name }}.${{ matrix.target }}.$DOMAIN" >> $GITHUB_OUTPUT
  

  deploy:
    name: Deploy Staging
    if: ${{ always() && inputs.name != '' }}
    runs-on: self-hosted
    timeout-minutes: 30
    needs: prepare-url
    strategy:
      matrix:
        target: ${{ fromJson(inputs.targets) }}
    environment:
      name: staging-${{ inputs.name }} (${{ matrix.target }})
      url: ${{ needs.prepare-url.outputs.url }}
    steps:
      - name: Checkout Humanoid CI
        uses: actions/checkout@v4
        with:
          repository: Humanoidfr/humanoid-ci
          token: ${{ secrets.token }}
          path: .github/actions/humanoid-ci

      - name: Create/update "${{ inputs.name }}" ${{ matrix.target }} staging environment
        if: ${{ inputs.action == 'opened' || inputs.action == 'reopened' || inputs.action == 'synchronize' }}
        env:
            HUMANOID_TOKEN: ${{ secrets.staging-token }}
            MADMOIZELLE_TOKEN: ${{ secrets.staging-mad-token }}
            IS_WOODY: true
        run: |
            python3 ./.github/actions/humanoid-ci/scripts/preprod.py clone ${{ matrix.target }} ${{ inputs.name }} ${{ inputs.name }} "${{ github.event.pull_request.html_url }}" ${{ toJson(github.event.pull_request.body) }} "${{ github.event.pull_request.user.avatar_url }}"
            # echo "s3_url=http://$(pulumi stack output bucketUrl)" >> $GITHUB_OUTPUT

      - name: Delete "${{ inputs.name }}" ${{ matrix.target }} staging environment
        if: ${{ inputs.action == 'closed' }}
        env:
            HUMANOID_TOKEN: ${{ secrets.staging-token }}
            MADMOIZELLE_TOKEN: ${{ secrets.staging-mad-token }}
            IS_WOODY: true
        run: |
            python3 ./.github/actions/humanoid-ci/scripts/preprod.py delete ${{ matrix.target }} ${{ inputs.name }}
