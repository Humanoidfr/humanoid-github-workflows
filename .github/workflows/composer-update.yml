name: Update composer.lock and generate update PR
on:
  workflow_call:
    inputs:
      PHP_VERSION:
        description: PHP version
        default: "8.1"
        required: false
        type: string
    secrets:
      COMPOSER_AUTH_JSON:
        description: Authentication for privately hosted packages and repositories as a JSON formatted object.
        required: false
      REPO_TOKEN:
        description: A repository access token that can be used to authenticate with the GitHub API.
        required: true

permissions:
  pull-requests: write
  contents: write

jobs:
  update-dependencies:
    name: Update composer.lock
    runs-on: ubuntu-latest
    env:
      COMPOSER_AUTH: "${{ secrets.COMPOSER_AUTH_JSON }}"
    concurrency:
      group: ${{ github.repository }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      # Set PHP version as an environment variable
      - name: Set PHP version
        run: |
          if [ -f .php-version ]; then
            CURRENT_PHP_VERSION=$(cat .php-version)
          else
            CURRENT_PHP_VERSION=${{ inputs.PHP_VERSION }}
          fi

          echo "PHP_VERSION=$CURRENT_PHP_VERSION" >> "$GITHUB_ENV"

      - name: Composer setup
        uses: Humanoidfr/humanoid-github-workflows/.github/actions/composer@main
        with:
          PHP_VERSION: ${{ env.PHP_VERSION }}
          COMPOSER_CONFIG: ${{ vars.COMPOSER_CONFIG_JSON }}
          INSTALL_AND_CACHE: false

      - run: composer update --no-interaction --no-scripts --prefer-dist --no-dev

      - name: Generate composer diff
        id: composer_diff
        uses: IonBazan/composer-diff-action@v1
        with:
          base: HEAD
          with-links: true
          no-dev: true
          format: json

      - run: echo "NOW=$(TZ=Europe/Paris date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      - name: Generate PR/commit summary
        uses: actions/github-script@v7
        if: ${{ steps.composer_diff.outputs.composer_diff_exit_code != 0 }}
        id: summary
        env:
          COMPOSER_DIFF_JSON: ${{ steps.composer_diff.outputs.composer_diff }}
          NOW: ${{ env.NOW }}
        with:
          result-encoding: string
          github-token: ${{ secrets.REPO_TOKEN }}
          script: |
            let composerDiff;
            try {
              composerDiff = JSON.parse(process.env.COMPOSER_DIFF_JSON);
            } catch (e) {
              process.exit(1);
            }

            async function getPackageCommitDetails(pack) {
              const { name, version_base, version_target, operation } = pack;
              if (operation === 'install') {
                return [];
              }
              const [owner, repo] = name.split('/');
              const fromCommit = version_base?.split(' ')[1];
              const toCommit = version_target?.split(' ')[1];
              if (!fromCommit || !toCommit) {
                return [];
              }
              try {
                const { data } = await github.rest.repos.compareCommits({
                  owner: 'Humanoidfr',
                  repo,
                  base: fromCommit,
                  head: toCommit,
                });
                if (data.commits.length === 0) {
                  return [];
                }

                const { commits } = data;

                const commitsFormattedList = commits.map((commit) => {
                  const commitSubject = commit.commit.message.split('\n')[0];
                  const regex = /\(#(\d+)\)$/s;
                  const replacedCommitSubject = commitSubject.replace(regex, `(https://github.com/Humanoidfr/${repo}/pull/$1)`);
                  return `* ${replacedCommitSubject} ([${commit.sha}](${commit.html_url}))`;
                });
                return [...commitsFormattedList];
              } catch (e) {
                console.log(e);
                return [];
              }
            }

            async function getPackageDiff(pack) {
              const { name, operation, version_base, version_target, compare, link } = pack;
              const section = [`## ${name} (${operation})`];
              section.push(``);
              if (name.startsWith('humanoid/')) {
                const commitDiff = await getPackageCommitDetails(pack);
                commitDiff.length && section.push(...commitDiff);
                section.push(``);
              }
              section.push(`Compare: ${compare}`);
              section.push(``);
              return section;
            }

            async function run(diff) {
              const composerDiffPackages = Object.values(diff.packages).sort((a, b) =>
                a.name.startsWith('humanoid/') ? -1 : 1
              );

              const markDown = [`# Update summary of ${process.env.NOW}`];
              markDown.push(``);
              for (const pack of composerDiffPackages) {
                const packageDiff = await getPackageDiff(pack);
                markDown.push(...packageDiff);
              }
              return markDown.join('\n').replace(/"/g, '\\"');
            }
            return run(composerDiff);

      - # Add summary to changelog
        name: Add summary to changelog
        if: ${{ steps.composer_diff.outputs.composer_diff_exit_code != 0 }}
        env:
          NOW: ${{ env.NOW }}
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
          fi

          echo "${{ steps.summary.outputs.result }}" | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md

      - uses: peter-evans/create-pull-request@v7
        if: ${{ steps.composer_diff.outputs.composer_diff_exit_code != 0 }}
        env:
          NOW: ${{ env.NOW }}
        with:
          add-paths: |
            *.lock
            CHANGELOG.md
          commit-message: |
            release: ${{ env.NOW }}

            ${{ steps.summary.outputs.result }}
          branch: update-dependencies
          title: "[${{ env.NOW }}] Update dependencies"
          body: ${{ steps.summary.outputs.result }}
