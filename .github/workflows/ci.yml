name: CI
on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      type:
        description: 'mu-plugins|plugins|themes'
        type: string
        required: true
      name:
        type: string
        default: ''
      action:
        description: 'opened|reopened|synchronize|closed'
        type: string
        required: true
    secrets:
      token:
        required: true
      coverage-token:
        required: true
      staging-token:
        required: true
      staging-mad-token:
        required: true
      private-key:
        required: true
      docker-username:
        required: true
      docker-password:
        required: true
jobs:
  tests:
    name: Run tests
    if: ${{ inputs.action != 'closed' }}
    runs-on: self-hosted
    timeout-minutes: 30
    container:
      image: dockeregistry.humanoid.fr/${{ inputs.target }}:latest
      options: --user root
      credentials:
        username: ${{ secrets.docker-username }}
        password: ${{ secrets.docker-password }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_number }}

      - name: Start services
        run: |
          service mariadb restart &> /dev/null; \
          service php$(php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;')-fpm restart &> /dev/null; \
          service redis-server restart &> /dev/null; \
          service nginx restart &> /dev/null; \
          service elasticsearch restart &> /dev/null;
      - name: Setup SSH
        run: |
          echo "APP_WEBSITE=${{ inputs.target }}" >> $GITHUB_ENV
          echo "APP_ENV=local" >> $GITHUB_ENV
          useradd -r -d $HOME -s /bin/bash -g root -G sudo -u 1001 ci
          echo "${{ secrets.private-key }}" > /tmp/sshkey
          chmod 600 /tmp/sshkey
          chown ci:root /tmp/sshkey
          echo "GIT_SSH_COMMAND=ssh -i /tmp/sshkey -o StrictHostKeyChecking=no" >> $GITHUB_ENV

      - name: Checkout Humanoid CI
        uses: actions/checkout@v2
        with:
          repository: Humanoidfr/humanoid-ci
          token: ${{ secrets.token }}
          path: .github/actions/humanoid-ci

      - name: "Checkout repositories to current branch"
        run: ./.github/actions/humanoid-ci/scripts/checkout.sh ${{ inputs.type }} ${{ github.event.repository.name }}
        shell: bash

      - name: Setup current repository
        run: |
          [ -f /var/www/wordpress/wp-content/${{ inputs.type }}/${{ github.event.repository.name }} ] && mv /var/www/wordpress/wp-content/${{ inputs.type }}/${{ github.event.repository.name }} ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_number }}_old
          mv ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_number }} /var/www/wordpress/wp-content/${{ inputs.type }}/${{ github.event.repository.name }}
          chown -R root:root /var/www/
          [[ "${{ github.event.repository.name }}" != "humanoid-core" ]]  && cd /var/www/wordpress/wp-content/mu-plugins/humanoid-core && composer install -n --no-scripts
          cd /var/www/wordpress/wp-content/${{ inputs.type }}/${{ github.event.repository.name }} && composer install -n --no-scripts
        shell: bash

      - name: Generate & publish code coverage
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          XDEBUG_MODE: coverage
          CC_TEST_REPORTER_ID: ${{ secrets.coverage-token }}
        with:
          coverageCommand: ./vendor/bin/phpunit tests --coverage-clover=coverage.xml
          coverageLocations: |
            /var/www/wordpress/wp-content/${{ inputs.type }}/${{ github.event.repository.name }}/coverage.xml:clover
          workingDirectory: /var/www/wordpress/wp-content/${{ inputs.type }}/${{ github.event.repository.name }}

      - name: Run all Unit/Integration tests
        id: unit-tests
        run: /var/www/vendor/bin/exec-all-tests.sh /var/www/wordpress ci
  staging:
    name: Deploy Staging
    if: ${{ always() && inputs.name != '' }}
    needs: [tests]
    runs-on: self-hosted
    steps:
      - name: Checkout Humanoid CI
        uses: actions/checkout@v2
        with:
          repository: Humanoidfr/humanoid-ci
          token: ${{ secrets.token }}
          path: .github/actions/humanoid-ci

      - name: Create/update "${{ inputs.name }}" ${{ inputs.target }} staging environment
        if: ${{ inputs.action == 'opened' || inputs.action == 'reopened' }}
        env:
          HUMANOID_TOKEN: ${{ secrets.staging-token }}
          MADMOIZELLE_TOKEN: ${{ secrets.staging-mad-token }}
          IS_WOODY: true
        run: |
          python3 ./.github/actions/humanoid-ci/scripts/preprod.py clone ${{ inputs.target }} ${{ inputs.name }}

      - name: Delete "${{ inputs.name }}" ${{ inputs.target }} staging environment
        if: ${{  inputs.action == 'closed' }}
        env:
          HUMANOID_TOKEN: ${{ secrets.staging-token }}
          MADMOIZELLE_TOKEN: ${{ secrets.staging-mad-token }}
          IS_WOODY: true
        run: |
          python3 ./.github/actions/humanoid-ci/scripts/preprod.py delete ${{ inputs.target }} ${{ inputs.name }}
