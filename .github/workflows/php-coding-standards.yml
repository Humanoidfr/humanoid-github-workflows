name: PHP Coding standards

on:
  workflow_call:
    inputs:
      PHP_VERSION:
        description: PHP version with which the coding standard analysis is to be executed.
        default: "8.1"
        required: false
        type: string
      COMPOSER_ARGS:
        description: Set of arguments passed to Composer.
        default: "--prefer-dist --no-scripts"
        required: false
        type: string
      PHPCS_ARGS:
        description: Set of arguments passed to PHP_CodeSniffer.
        default: "--report-full --report-checkstyle=./phpcs-report.xml"
        required: false
        type: string
      CS2PR_ARGS:
        description: Set of arguments passed to cs2pr.
        default: "--graceful-warnings ./phpcs-report.xml"
        required: false
        type: string
    secrets:
      COMPOSER_AUTH_JSON:
        description: Authentication for privately hosted packages and repositories as a JSON formatted object.
        required: false

jobs:
  php-coding-standards:
    name: PHP Coding standards
    runs-on: ubuntu-latest
    env:
      COMPOSER_AUTH: "${{ secrets.COMPOSER_AUTH_JSON }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.PHP_VERSION }}
          tools: composer, cs2pr
          coverage: none

      - name: Set Composer global config
        run: echo $COMPOSER_CONFIG > $(composer -n config --global home)/config.json
        env:
          COMPOSER_CONFIG: ${{ vars.COMPOSER_CONFIG_JSON }}

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: ${{ inputs.COMPOSER_ARGS }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v31

      - name: Run PHP_CS
        run: ./vendor/bin/phpcs ${{ inputs.PHPCS_ARGS }} ${{ join(steps.changed-files.outputs.all_changed_files, ' ') }}

      - name: Annotate PHP_CodeSniffer report
        if: ${{ always() }}
        run: cs2pr ${{ inputs.CS2PR_ARGS }}
